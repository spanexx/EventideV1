// Shared styles for all settings components
// Import this in each component's SCSS file

.card {
  background: var(--card);
  border-radius: 16px;
  border: 1px solid var(--border);
  overflow: hidden;

  &:hover {
    background: color-mix(in srgb, var(--card) 97%, white);
  }

  .card-header {
    padding: var(--spacing-lg);
    background: var(--card);
    border-bottom: 1px solid var(--border);

    .card-title {
      font-size: var(--font-size-lg);
      font-weight: 500;
      color: var(--foreground);
      margin: 0 0 var(--spacing-xs) 0;
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);

      mat-icon {
        color: var(--primary);
      }
    }

    .card-description {
      font-size: var(--font-size-sm);
      color: var(--muted-foreground);
      margin: 0;
      line-height: 1.5;
    }
  }
}

.card-content {
  padding: var(--spacing-lg);
  background: var(--card);

  .settings-form {
    padding: 0;
  }
}

.card-footer {
  padding: var(--spacing-md) var(--spacing-lg);
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-sm);
  background: var(--card);
  border-top: 1px solid var(--border);

  button {
    min-width: 100px;
    border-radius: 6px;
    font-weight: 500;
    font-size: 14px;
    position: relative;

    &[color="primary"] {
      background: var(--primary);
      color: var(--primary-foreground);

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: 6px;
        background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(0,0,0,0));
        opacity: 0;
        transition: opacity 160ms ease;
        pointer-events: none;
      }

      &:hover::after {
        opacity: 1;
      }
    }

    &:not([color="primary"]) {
      background: var(--muted);
      color: var(--foreground);
      border: 1px solid var(--border);

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: 6px;
        background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(0,0,0,0));
        opacity: 0;
        transition: opacity 160ms ease;
        pointer-events: none;
      }

      &:hover::after {
        opacity: 1;
      }
    }
  }
}

.settings-form {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);

  mat-form-field {
    width: 100%;

    ::ng-deep .mat-mdc-text-field-wrapper {
      padding-left: 8px;
      
      .mat-mdc-form-field-flex {
        .mat-mdc-floating-label {
          left: 8px;
        }
        
        .mat-mdc-form-field-infix {
          padding-left: 4px;
        }
      }
    }
    
    ::ng-deep .mat-mdc-form-field-subscript-wrapper {
      padding-left: 8px;
    }
  }

  .profile-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-lg);

    @media (max-width: 768px) {
      grid-template-columns: 1fr;
    }
  }

  .profile-actions {
    margin-top: var(--spacing-md);
    display: flex;
    justify-content: flex-end;
  }

  mat-checkbox {
    ::ng-deep {
      .mdc-form-field {
        width: 100%;
        padding: 8px 12px;
        margin: 0;
        border-radius: 6px;
        background-color: rgba(242, 242, 247, 0.3);
        transition: background-color 0.2s ease;
        
        &:hover {
          background-color: rgba(235, 235, 240, 0.5);
        }
        
        .mdc-checkbox {
          padding: 0;
          margin-right: 8px;
          
          .mdc-checkbox__native-control {
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
          }
          
          .mdc-checkbox__background {
            border-radius: 3px;
            
            .mdc-checkbox__checkmark {
              width: 16px;
              height: 16px;
            }
            
            .mdc-checkbox__mixedmark {
              border-radius: 1px;
            }
          }
        }
        
        .mdc-label {
          width: 100%;
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin: 0;
          font-size: 13px;
          font-weight: 400;
          color: rgb(29, 29, 31);
        }
      }
      
      &.mat-mdc-checkbox-checked {
        .mdc-form-field {
          background-color: color-mix(in srgb, var(--primary) 8%, transparent);
          
          .mdc-checkbox {
            .mdc-checkbox__background {
              background-color: var(--primary);
              border-color: var(--primary);
            }
          }
        }
      }
    }
    
    & + mat-checkbox {
      margin-top: 2px;
    }
  }

  mat-slide-toggle {
    display: flex;
    padding: 8px 12px;
    margin: 0;
    border-radius: 6px;
    background-color: rgba(242, 242, 247, 0.3);
    transition: background-color 0.2s ease;

    & + mat-slide-toggle {
      margin-top: 2px;
    }

    &:hover {
      background-color: rgba(235, 235, 240, 0.5);
    }

    ::ng-deep {
      .mdc-form-field {
        width: 100%;
        flex-direction: row-reverse;
        justify-content: space-between;
        margin: 0;
      }

      .mdc-switch {
        margin: 0;
        --mdc-switch-selected-track-color: rgb(52, 199, 89);
        --mdc-switch-selected-handle-color: white;
        --mdc-switch-selected-hover-state-layer-color: transparent;
        --mdc-switch-selected-focus-state-layer-color: transparent;
        --mdc-switch-selected-pressed-state-layer-color: transparent;
        --mdc-switch-unselected-track-color: rgb(229, 229, 234);
        --mdc-switch-unselected-handle-color: white;
        --mdc-switch-unselected-hover-state-layer-color: transparent;
        --mdc-switch-unselected-focus-state-layer-color: transparent;
        --mdc-switch-unselected-pressed-state-layer-color: transparent;
      }

      .mdc-switch.mdc-switch--selected:enabled .mdc-switch__shadow,
      .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__shadow {
        box-shadow: none;
      }

      .mdc-switch__handle {
        border-radius: 50%;
      }

      .mdc-switch__track {
        border-radius: 14px;
        border: none;
      }

      .mdc-label {
        margin: 0;
        font-size: 13px;
        font-weight: 400;
        color: rgb(29, 29, 31);
      }
    }
  }

  .time-range {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-lg);
  }

  .working-hours {
    background: var(--card);
    padding: var(--spacing-lg);
    border-radius: 12px;
    border: 1px solid var(--border);

    h3 {
      margin: 0 0 var(--spacing-lg) 0;
      font-size: var(--font-size-lg);
      font-weight: 500;
    }
  }

  .location-section {
    background: var(--card);
    padding: var(--spacing-lg);
    border-radius: 12px;
    border: 1px solid var(--border);

    h3 {
      margin: 0 0 var(--spacing-lg) 0;
      font-size: var(--font-size-lg);
      font-weight: 500;
    }

    .location-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: var(--spacing-lg);
    }
  }

  .business-actions {
    margin-top: var(--spacing-md);
    display: flex;
    justify-content: flex-end;
  }

  mat-chip-grid {
    width: 100%;
  }
}

// Mobile responsive adjustments
@media (max-width: 768px) {
  .card-footer {
    flex-direction: column;

    button {
      width: 100%;
    }
  }

  .settings-form {
    .time-range {
      grid-template-columns: 1fr;
    }

    mat-form-field {
      ::ng-deep .mat-mdc-text-field-wrapper {
        padding-left: 6px;
        
        .mat-mdc-form-field-flex {
          .mat-mdc-floating-label {
            left: 6px;
          }
        }
      }
      
      ::ng-deep .mat-mdc-form-field-subscript-wrapper {
        padding-left: 6px;
      }
    }
    
    mat-checkbox {
      ::ng-deep .mdc-form-field {
        padding: 6px 10px;
      }
    }
    
    mat-slide-toggle {
      padding: 6px 10px;
    }
  }
}
