// <!-- import { Component, OnInit } from '@angular/core';
// import { CommonModule } from '@angular/common';
// import { Router, ActivatedRoute } from '@angular/router';
// import { HttpClient } from '@angular/common/http';
// import { MatIconModule } from '@angular/material/icon';
// import { environment } from '../../environments/environment';
// import { ProviderSearchHeaderComponent } from './components/provider-search-header.component';
// import { ProviderSearchCategoryComponent } from './components/provider-search-category.component';
// import { ProviderSearchResultsComponent } from './components/provider-search-results.component';
// import * as SearchFiltersActions from '../store/search-filters/search-filters.actions';
// import * as SearchFiltersSelectors from '../store/search-filters/search-filters.selectors';
// import { Store } from '@ngrx/store';


// interface Provider {
//   _id: string;
//   id?: string;
//   name: string;
//   email: string;
//   username?: string;
//   role: string;
//   firstName?: string;
//   lastName?: string;
//   businessName?: string;
//   businessDescription?: string;
//   bio?: string;
//   location?: string;
//   locationDetails?: {
//     country?: string;
//     countryCode?: string;
//     city?: string;
//     cityCode?: string;
//     address?: string;
//   };
//   contactPhone?: string;
//   services?: string[];
//   categories?: string[];
//   customCategories?: string[];
//   specialties?: string[];
//   availableDurations?: number[];
//   rating?: number;
//   reviewCount?: number;
//   matchScore?: number;
//   matchReasons?: string[];
// }

// @Component({
//   selector: 'app-provider-search',
//   standalone: true,
//   imports: [
//     CommonModule,
//     MatIconModule,
//     ProviderSearchHeaderComponent,
//     ProviderSearchCategoryComponent,
//     ProviderSearchResultsComponent
//   ],
//   templateUrl: './provider-search.component.html',
//   styleUrls: ['./provider-search.component.scss']
// })
// export class ProviderSearchComponent implements OnInit {
//   searchQuery: string = '';
//   providers: Provider[] = [];
//   allProviders: Provider[] = [];
//   loading: boolean = false;
//   error: string | null = null;
//   searched: boolean = false;
  
//   // Pagination
//   currentPage: number = 1;
//   pageSize: number = 10;
//   totalProviders: number = 0;
//   totalPages: number = 0;


  
//   // Filters
//   selectedCategory: string = '';
//   selectedRating: number = 0;
//   selectedCountry: string = '';
//   selectedCity: string = '';
//   hoverRating: number = 0;
//   availableCategories: string[] = [];
//   availableCountries: string[] = [];
//   availableCities: string[] = [];
//   maxVisibleCategories: number = 6;
  
//   // Expose Math to template
//   Math = Math;

//   private API_URL = `${environment.apiUrl}/public/providers`;

//   constructor(
//     private http: HttpClient,
//     private router: Router,
//     private route: ActivatedRoute,
//     private store: Store
//   ) {}

//   ngOnInit() {
//     console.log('üåç Initializing provider search component');

//     const searchQuery$ = this.store.select(SearchFiltersSelectors.selectSearchQuery);
//     const selectedCategory$ = this.store.select(SearchFiltersSelectors.selectSelectedCategory);
//     const selectedRating$ = this.store.select(SearchFiltersSelectors.selectSelectedRating);
//     const selectedCountry$ = this.store.select(SearchFiltersSelectors.selectSelectedCountry);
//     const selectedCity$ = this.store.select(SearchFiltersSelectors.selectSelectedCity);
//     const availableCountries$ = this.store.select(SearchFiltersSelectors.selectAvailableCountries);
//     const availableCities$ = this.store.select(SearchFiltersSelectors.selectAvailableCities);
//     const availableCategories$ = this.store.select(SearchFiltersSelectors.selectAvailableCategories);

//     // Subscribe to store values
//     searchQuery$.subscribe(q => {
//       console.log('üåç Search query from store:', q);
//       this.searchQuery = q;
//     });
//     selectedCategory$.subscribe(c => {
//       console.log('üåç Selected category from store:', c);
//       this.selectedCategory = c;
//     });
//     selectedRating$.subscribe(r => {
//       console.log('üåç Selected rating from store:', r);
//       this.selectedRating = r;
//     });
//     selectedCountry$.subscribe(c => {
//       console.log('üåç Selected country from store:', c);
//       this.selectedCountry = c;
//     });
//     selectedCity$.subscribe(c => {
//       console.log('üèôÔ∏è Selected city from store:', c);
//       this.selectedCity = c;
//     });
//     availableCountries$.subscribe(c => {
//       console.log('üåç Available countries from store:', c);
//       this.availableCountries = c;
//     });
//     availableCities$.subscribe(c => {
//       console.log('üèôÔ∏è Available cities from store:', c);
//       this.availableCities = c;
//     });
//     availableCategories$.subscribe(c => {
//       console.log('üìÅ Available categories from store:', c);
//       this.availableCategories = c;
//     });

//     // Handle query params
//     this.route.queryParams.subscribe(params => {
//       console.log('üåç Route params:', params);
//       if (params['search']) {
//         this.store.dispatch(SearchFiltersActions.setSearchQuery({ query: params['search'] }));
//       }
//       if (params['category']) {
//         this.store.dispatch(SearchFiltersActions.setSelectedCategory({ category: params['category'] }));
//       }
//       if (params['rating']) {
//         this.store.dispatch(SearchFiltersActions.setSelectedRating({ rating: parseInt(params['rating']) }));
//       }
//       if (params['country']) {
//         console.log('üåç Setting country from params:', params['country']);
//         this.store.dispatch(SearchFiltersActions.setSelectedCountry({ country: params['country'] }));
//         this.selectedCountry = params['country'];
//         // Extract cities for the selected country
//         if (this.allProviders.length > 0) {
//           this.extractCitiesForCountry(params['country']);
//         }
//       }
//       if (params['city']) {
//         // Normalize the city name to match the case in available cities
//         const normalizedCity = this.normalizeCityName(params['city']);
//         this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: normalizedCity }));
//         this.selectedCity = normalizedCity;
//       }
      
//       this.loadAllProviders();
//     });
//   }

//   /**
//    * Normalize city name to match the case in available cities
//    */
//   private normalizeCityName(city: string): string {
//     if (!city) return city;
    
//     // If we have available cities, try to find a match with proper case
//     if (this.availableCities && this.availableCities.length > 0) {
//       const lowerCity = city.toLowerCase().trim();
//       const match = this.availableCities.find(c => c.toLowerCase().trim() === lowerCity);
//       if (match) {
//         return match; // Return the properly cased version
//       }
//     }
    
//     // If no match found, try to title case the city name
//     return city.split(' ')
//       .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
//       .join(' ');
//   }
  
//   /**
//    * Get properly cased city name from available cities
//    */
//   private getProperCasedCity(city: string): string {
//     if (!city) return city;
    
//     const lowerCity = city.toLowerCase().trim();
//     const match = this.availableCities.find(c => c.toLowerCase().trim() === lowerCity);
//     return match || city;
//   }

//   loadAllProviders(page: number = 1) {
//     this.loading = true;
//     this.error = null;
//     this.currentPage = page;
  
//     this.http.get<any>(`${this.API_URL}?page=${page}&limit=100`).subscribe({
//       next: (response) => {
//         const data = response.data || response;
//         this.allProviders = Array.isArray(data) ? data : (data.providers || []);
//         console.log('Providers loaded:', this.allProviders.length);
//         console.log('Sample provider:', this.allProviders[0]); // Debug log
//         console.log('Sample provider location details:', this.allProviders[0]?.locationDetails); // Debug log
//         this.extractCategories();
//         this.extractCountries();  // Changed from extractLocations
        
//         // If country is already selected (from query params), extract cities for that country
//         if (this.selectedCountry) {
//           this.extractCitiesForCountry(this.selectedCountry);
//           // Normalize the selected city name after loading cities
//           if (this.selectedCity) {
//             const normalizedCity = this.getProperCasedCity(this.selectedCity);
//             if (normalizedCity !== this.selectedCity) {
//               this.selectedCity = normalizedCity;
//               this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: normalizedCity }));
//             }
//           }
//         }
        
//         this.applyFilters();
//         this.loading = false;
//         console.log('‚úÖ Loaded providers:', this.allProviders.length);
//       },
//       error: (err) => {
//         this.error = 'Failed to load providers. Please try again.';
//         this.loading = false;
//         console.error('‚ùå Error loading providers:', err);
//       }
//     });
//   }

//   extractCategories() {
//     const categoryStats = new Map<string, { totalRating: number; totalReviews: number; count: number }>();
    
//     // Collect stats for each category
//     this.allProviders.forEach(provider => {
//       const categories = [...(provider.categories || []), ...(provider.customCategories || [])];
//       categories.forEach(cat => {
//         if (!categoryStats.has(cat)) {
//           categoryStats.set(cat, { totalRating: 0, totalReviews: 0, count: 0 });
//         }
//         const stats = categoryStats.get(cat)!;
//         stats.totalRating += provider.rating || 0;
//         stats.totalReviews += provider.reviewCount || 0;
//         stats.count += 1;
//       });
//     });
    
//     // Sort categories by average rating (desc), then by total reviews (desc)
//     this.availableCategories = Array.from(categoryStats.entries())
//       .sort((a, b) => {
//         const avgRatingA = a[1].totalRating / a[1].count;
//         const avgRatingB = b[1].totalRating / b[1].count;
        
//         if (Math.abs(avgRatingA - avgRatingB) > 0.1) {
//           return avgRatingB - avgRatingA; // Higher rating first
//         }
        
//         return b[1].totalReviews - a[1].totalReviews; // More reviews first
//       })
//       .map(entry => entry[0]);
    
//     console.log('üìä Categories sorted by rating and reviews:', this.availableCategories.slice(0, 10));
//     this.store.dispatch(SearchFiltersActions.setAvailableCategories({ categories: this.availableCategories }));
//   }

//   extractCountries() {
//     const countrySet = new Set<string>();
    
//     console.log('üåç Extracting countries from providers:', this.allProviders.length);
//     this.allProviders.forEach((provider, index) => {
//       if (provider.locationDetails?.country) {
//         countrySet.add(provider.locationDetails.country);
//         if (index < 5) {
//           console.log(`üåç Provider ${index} country:`, provider.locationDetails.country);
//         }
//       } else if (index < 5) {
//         console.log(`üåç Provider ${index} has no country:`, provider.locationDetails);
//       }
//     });
    
//     this.availableCountries = Array.from(countrySet).sort();
//     console.log('üåç Available countries:', this.availableCountries);
//     console.log('üåç Number of countries:', this.availableCountries.length);
//     this.store.dispatch(SearchFiltersActions.setAvailableCountries({ countries: this.availableCountries }));
//   }
  
//   extractCitiesForCountry(country: string) {
//     const citySet = new Set<string>();
    
//     console.log(`üåç Extracting cities for country: ${country}`);
//     console.log('üåç Total providers:', this.allProviders.length);
//     this.allProviders.forEach((provider, index) => {
//       if (provider.locationDetails?.country === country && provider.locationDetails?.city) {
//         citySet.add(provider.locationDetails.city);
//         if (index < 5) {
//           console.log(`üåç Provider ${index} city:`, provider.locationDetails.city);
//         }
//       } else if (index < 5) {
//         console.log(`üåç Provider ${index} does not match country or has no city:`, provider.locationDetails);
//       }
//     });
    
//     this.availableCities = Array.from(citySet).sort();
//     console.log(`üèôÔ∏è Available cities in ${country}:`, this.availableCities);
//     console.log(`üèôÔ∏è Number of cities in ${country}:`, this.availableCities.length);
//     this.store.dispatch(SearchFiltersActions.setAvailableCities({ cities: this.availableCities }));
    
//     // If we have a selected city, make sure it's properly cased
//     if (this.selectedCity) {
//       const normalizedCity = this.getProperCasedCity(this.selectedCity);
//       if (normalizedCity !== this.selectedCity) {
//         this.selectedCity = normalizedCity;
//         this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: normalizedCity }));
//       }
//     }
//   }

//   applyFilters() {
//     console.log('üîç Applying scoring and filters:', {
//       searchQuery: this.searchQuery,
//       selectedCategory: this.selectedCategory,
//       selectedRating: this.selectedRating,
//       selectedCountry: this.selectedCountry,
//       selectedCity: this.selectedCity,
//       totalProviders: this.allProviders.length
//     });
  
//     // Score all providers based on relevance
//     const scored = this.allProviders.map(provider => {
//       let score = 0;
//       const reasons: string[] = [];
      
//       // Category matching (highest priority - 10 points for exact, 5 for related)
//       if (this.selectedCategory) {
//         const categoryFilter = this.selectedCategory.toLowerCase().trim();
//         const hasExactMatch = provider.categories?.some(cat => cat.toLowerCase() === categoryFilter) ||
//                               provider.customCategories?.some(cat => cat.toLowerCase() === categoryFilter);
//         const hasPartialMatch = provider.categories?.some(cat => cat.toLowerCase().includes(categoryFilter)) ||
//                                 provider.customCategories?.some(cat => cat.toLowerCase().includes(categoryFilter));
        
//         if (hasExactMatch) {
//           score += 10;
//           reasons.push('Exact category match');
//         } else if (hasPartialMatch) {
//           score += 5;
//           reasons.push('Related category');
//         }
//       }
      
//       // City matching (8 points)
//       if (this.selectedCity) {
//         if (provider.locationDetails?.city?.toLowerCase() === this.selectedCity.toLowerCase()) {
//           score += 8;
//           reasons.push('City match');
//         }
//       }
      
//       // Country matching (5 points)
//       if (this.selectedCountry) {
//         if (provider.locationDetails?.country?.toLowerCase() === this.selectedCountry.toLowerCase()) {
//           score += 5;
//           reasons.push('Country match');
//         }
//       }
      
//       // Search query matching (7 points for service, 3 for bio/description)
//       if (this.searchQuery.trim()) {
//         const query = this.searchQuery.toLowerCase();
//         const searchTerms = query.split(/\s+/).filter(term => term.length > 0);
        
//         // Check services
//         if (provider.services?.some(s => searchTerms.some(term => s.toLowerCase().includes(term)))) {
//           score += 7;
//           reasons.push('Service match');
//         }
        
//         // Check categories
//         if (provider.categories?.some(c => searchTerms.some(term => c.toLowerCase().includes(term)))) {
//           score += 6;
//           reasons.push('Category keyword match');
//         }
        
//         // Check bio/description
//         const bioText = [provider.bio, provider.businessDescription].filter(Boolean).join(' ').toLowerCase();
//         if (searchTerms.some(term => bioText.includes(term))) {
//           score += 3;
//           reasons.push('Description match');
//         }
        
//         // Check business name
//         if (provider.businessName?.toLowerCase().includes(query)) {
//           score += 4;
//           reasons.push('Business name match');
//         }
//       }
      
//       return {
//         ...provider,
//         matchScore: score,
//         matchReasons: reasons
//       };
//     });
    
//     // Sort by score (highest first), then by rating
//     scored.sort((a, b) => {
//       if (b.matchScore !== a.matchScore) {
//         return b.matchScore! - a.matchScore!;
//       }
//       return (b.rating || 0) - (a.rating || 0);
//     });
    
//     console.log('üìä Top 10 scored providers:', scored.slice(0, 10).map(p => 
//       `${p.username}(score:${p.matchScore}, rating:${p.rating}, reasons:${p.matchReasons?.join(', ')})`
//     ));
  
//     let filtered = scored;
  
//     // Apply HARD filters (these remove providers completely)
//     // Only apply hard filters if user explicitly selected them via dropdowns
//     // Username search is always a hard filter
//     if (this.searchQuery.trim() && this.searchQuery.startsWith('@')) {
//       const username = this.searchQuery.substring(1).toLowerCase();
//       filtered = filtered.filter(p => p.username?.toLowerCase().includes(username));
//       console.log(`üë§ Username filter: ${filtered.length} providers`);
//     }
    
//     // Rating is a hard filter (quality threshold)
//     if (this.selectedRating > 0) {
//       const minRating = this.selectedRating;
//       const maxRating = this.selectedRating < 5 ? this.selectedRating + 0.9 : 5.0;
      
//       // Filter providers within the rating range
//       const inRange = filtered.filter(p => {
//         const rating = p.rating || 0;
//         return rating >= minRating && rating <= maxRating;
//       });
      
//       // If we have providers in range, use them
//       if (inRange.length > 0) {
//         filtered = inRange;
//         console.log(`‚≠ê Rating filter ${this.selectedRating}: ${filtered.length} providers in range`);
//       } else {
//         console.log(`‚≠ê No providers found in rating range ${minRating}-${maxRating}`);
//       }
//     }
  
//     this.providers = filtered;
//     this.totalProviders = filtered.length;
//     this.totalPages = Math.ceil(this.totalProviders / this.pageSize);
//     this.currentPage = 1;
  
//     console.log('üìä Scored and filtered results:', this.totalProviders, 'providers');
//     console.log('Top 5 by relevance:', this.providers.slice(0, 5).map(p => 
//       `${p.username}(score:${p.matchScore}, rating:${p.rating})`
//     ));
//   }

//   search() {
//     this.store.dispatch(SearchFiltersActions.setSearchQuery({ query: this.searchQuery }));
//     this.searched = true;
//     this.applyFilters();
//   }

//   selectCategory(category: string) {
//     this.store.dispatch(SearchFiltersActions.setSelectedCategory({ category }));
//     this.selectedCategory = category;
//     this.applyFilters();
//   }

//   selectRating(rating: number) {
//     this.store.dispatch(SearchFiltersActions.setSelectedRating({ rating }));
//     this.selectedRating = rating;
//     this.hoverRating = 0;
//     console.log(`üåü Selected rating: ${rating}`);
//     this.applyFilters();
//   }

//   clearRating() {
//     this.selectedRating = 0;
//     this.hoverRating = 0;
//     console.log('üåü Rating filter cleared');
//     this.applyFilters();
//   }

//   getVisibleCategories(): string[] {
//     return this.availableCategories.slice(0, this.maxVisibleCategories);
//   }

//   getHiddenCategories(): string[] {
//     return this.availableCategories.slice(this.maxVisibleCategories);
//   }

//   clearFilters() {
//     this.store.dispatch(SearchFiltersActions.clearFilters());
//     this.selectedCategory = '';
//     this.selectedRating = 0;
//     this.selectedCountry = '';
//     this.selectedCity = '';
//     this.hoverRating = 0;
//     this.searchQuery = '';
//     this.availableCities = []; // Clear cities when clearing filters
//     console.log('üßπ Filters cleared');
//     this.applyFilters();
//   }
//   selectCountry(country: string) {
//     console.log('üåç Selecting country:', country);
//     console.log('üåç Available countries:', this.availableCountries);
//     this.store.dispatch(SearchFiltersActions.setSelectedCountry({ country }));
//     this.selectedCountry = country;
//     if (country) {
//       console.log(`üåç Extracting cities for country: ${country}`);
//       this.extractCitiesForCountry(country);
//       // Clear the selected city if it doesn't match the new country's cities
//       if (this.selectedCity) {
//         const normalizedCity = this.normalizeCityName(this.selectedCity);
//         if (normalizedCity !== this.selectedCity) {
//           this.selectedCity = normalizedCity;
//           this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: normalizedCity }));
//         }
//       }
//     } else {
//       this.availableCities = [];
//       this.selectedCity = '';
//       this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: '' }));
//     }
//     this.applyFilters();
//   }

//   selectCity(city: string) {
//     // Normalize the city name to match the case in available cities
//     const normalizedCity = this.normalizeCityName(city);
//     this.store.dispatch(SearchFiltersActions.setSelectedCity({ city: normalizedCity }));
//     this.selectedCity = normalizedCity;
//     this.applyFilters();
//   }

//   getFullName(provider: Provider): string {
//     if (provider.firstName && provider.lastName) {
//       return `${provider.firstName} ${provider.lastName}`;
//     }
//     return provider.name || provider.email;
//   }

//   getServices(provider: Provider): string[] {
//     return provider.services || provider.specialties || [];
//   }

//   getPaginatedProviders(): Provider[] {
//     const start = (this.currentPage - 1) * this.pageSize;
//     const end = start + this.pageSize;
//     return this.providers.slice(start, end);
//   }

//   isOutsideRatingRange(provider: Provider): boolean {
//     if (this.selectedRating === 0) return false;
    
//     const rating = provider.rating || 0;
//     const minRating = this.selectedRating;
//     const maxRating = this.selectedRating < 5 ? this.selectedRating + 0.9 : 5.0;
    
//     return rating < minRating || rating > maxRating;
//   }

//   isFirstBelowRating(index: number): boolean {
//     if (this.selectedRating === 0) return false;
    
//     const paginatedProviders = this.getPaginatedProviders();
//     const provider = paginatedProviders[index];
//     const rating = provider.rating || 0;
    
//     const minRating = this.selectedRating;
//     const maxRating = this.selectedRating < 5 ? this.selectedRating + 0.9 : 5.0;
    
//     // Check if this provider is outside the rating range
//     const isOutsideRange = rating < minRating || rating > maxRating;
//     if (!isOutsideRange) return false;
    
//     // Check if previous provider was in range (or doesn't exist)
//     if (index === 0) {
//       return true;
//     }
    
//     const previousProvider = paginatedProviders[index - 1];
//     const prevRating = previousProvider.rating || 0;
//     const prevInRange = prevRating >= minRating && prevRating <= maxRating;
    
//     return prevInRange;
//   }

//   viewProvider(providerId: string | undefined) {
//     if (!providerId) return;
//     this.router.navigate(['/provider', providerId]);
//   }

//   bookProvider(providerId: string | undefined) {
//     if (!providerId) return;
//     this.router.navigate(['/booking', providerId, 'duration']);
//   }

//   onPageChange(page: number) {
//     this.currentPage = page;
//     // Scroll to top
//     window.scrollTo({ top: 0, behavior: 'smooth' });
//   }

//   nextPage() {
//     if (this.currentPage < this.totalPages) {
//       this.onPageChange(this.currentPage + 1);
//     }
//   }

//   previousPage() {
//     if (this.currentPage > 1) {
//       this.onPageChange(this.currentPage - 1);
//     }
//   }

//   handlePageClick(page: number | string) {
//     if (typeof page === 'number') {
//       this.onPageChange(page);
//     }
//   }

//   getPageNumbers(): (number | string)[] {
//     const pages: (number | string)[] = [];
//     const maxVisible = 5;
    
//     if (this.totalPages <= maxVisible) {
//       // Show all pages if total is small
//       for (let i = 1; i <= this.totalPages; i++) {
//         pages.push(i);
//       }
//     } else {
//       // Always show first page
//       pages.push(1);
      
//       if (this.currentPage > 3) {
//         pages.push('...');
//       }
      
//       // Show pages around current page
//       const start = Math.max(2, this.currentPage - 1);
//       const end = Math.min(this.totalPages - 1, this.currentPage + 1);
      
//       for (let i = start; i <= end; i++) {
//         pages.push(i);
//       }
      
//       if (this.currentPage < this.totalPages - 2) {
//         pages.push('...');
//       }
      
//       // Always show last page
//       pages.push(this.totalPages);
//     }
    
//     return pages;
//   }
// } -->
