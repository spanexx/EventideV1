description = "Synchronize task statuses between specs/*/task.md and the MCP task system."

prompt = """

Synchronize task status between a spec's task.md and the MCP task tools.

Args (JSON)
------------
{
  "spec_path": "/absolute/path/to/spec/folder",  // optional
  "spec_key": "001-the-calendar-is",             // optional if spec_path provided
  "direction": "push|pull"                        // required: push = markdown → MCP, pull = MCP → markdown
}

Conventions
-----------
- Absolute repo root: /home/spanexx/Desktop/Projects/EventideV1
- Spec task file: <spec_path>/task.md
- Mapping file: .qwen/state/specs-task-map.json

Procedure
---------
1) Resolve <spec_path> (same rules as specs-task-executor).
2) Load <spec_path>/task.md and parse tasks (checkboxes with optional (id: ...)).
3) Load mapping from .qwen/state/specs-task-map.json.

4) Direction = push (markdown → MCP):
   - For each parsed task, ensure MCP task exists (create if missing) and set status based on checkbox/status tag.
   - Update mapping with any newly created MCP IDs.

5) Direction = pull (MCP → markdown):
   - For each mapped task, query MCP for current status.
   - Update the corresponding line in task.md to reflect status (checkbox and optional (status: ...)).

6) Save updated mapping and task.md.

7) Output a concise report of synced items and any conflicts (e.g., task not found in the other system).

Validation
----------
- Preserve unrelated markdown content.
- Only touch checkbox lines for known tasks.
- Use absolute paths for all reads/writes.

Examples
--------
// Push markdown states to MCP for active spec
{"spec_key":"001-the-calendar-is","direction":"push"}

// Pull MCP states into markdown
{"spec_key":"001-the-calendar-is","direction":"pull"}

"""


